%YAML 1.2
---
datascraper:
  use_websocket: no  # optional, default is yes

  chain_name: steem  # may be only steem or golos
  server_type: qa # prod or qa

  max_attempts: 50  # how many times to retry scraping in case of unexpected error
  skip_freq: 5  # how many fails should be to skip 1 block. Don't skip - skip_freq >= max_attempts

  nodes:
    ws:
      - wss://steemd.steepshot.org
      - wss://steemd-int.steemit.com
      - wss://api.steemit.com
    http:
#      - https://steemd.steepshot.org
#      - https://steemd-int.steemit.com
      - https://api.steemit.com

  operation_types:
    post_operations:
      - comment
      - delete_comment
      - vote
      - author_reward
    delegate_operations:
      - delegate_vesting_shares
      - return_vesting_delegation
    transfer_operations:
      - transfer
      - claim_reward_balance
      - transfer_to_vesting
      - withdraw_vesting

    update_operations:
      - account_update
  notification:
    send: no
    url: https://steepshot.org/api/v1_1/notification
    token: f3e95ecbaf6f0a86acabcd43cda913c8afcd7e77
    events:
      # key - the name of the operation for notification
      # value - the name of the class from `notification.py` module
      comment: CommentEvent
      vote: VoteEvent

  curators_payouts:
    accounts_for_transfer:
      - steepshot
    currencies:
      - STEEM
    minimal_sum: 0.5

redis:
  host: 127.0.0.1
  port: 6379
  databases:
    forward_db: 7
    backward_db: 8
    result_db: 9

db:
  mongo:
    host: 127.0.0.1
    port: 27017
    db_name: SteemData
    username: steepshot  # may be absent
    password: steepshot  # may be absent
    options:  # may be absent
      ssl: "true"
      authMechanism: SCRAM-SHA-1

log_path: ./log # set path for logs
...
